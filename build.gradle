plugins {
    id 'java'
    id 'war'
    id 'idea'
    id 'org.jetbrains.dokka' version '0.10.0'
    id "org.jetbrains.kotlin.plugin.noarg" version "1.3.61"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.61"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.61"
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group 'com.aohui'
version '0.0.1-SNAPSHOT'

java{
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
    mavenCentral()
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation ("mysql:mysql-connector-java") {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation "org.redisson:redisson:3.11.6"
    implementation "com.google.guava:guava:28.1-jre"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation 'org.bitcoinj:bitcoinj-core:0.15.5'
    implementation 'com.google.protobuf:protobuf-java:3.11.0'
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.58'
    implementation 'com.amazonaws:aws-java-sdk-ses:1.11.659'
    implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'


    //log
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "jdocs"
    configuration{
        includes = ['packages.md']
        targets = ["JVM"]
        platform = "JVM"
        jdkVersion = 8
    }
}

task createDirs {
    sourceSets*.kotlin.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

test {
    useJUnitPlatform()
}

//jar {
//    manifest {
//        attributes('Main-Class': 'org.x3.server.Server')
//    }
//
//}